pipeline {
    agent { label 'mohan' }

    parameters {
        string(name: 'IMAGE_TAG', defaultValue: 'latest', description: 'Docker image tag to deploy')
    }

    environment {
        HELM_RELEASE = "petclinic"
        HELM_CHART = "./"
        KUBE_CLUSTER = "devil-eks-cluster"
        KUBE_REGION = "us-west-2"
        NAMESPACE = "default"
    }

    stages {
        stage('Deploy to EKS with Helm') {
            steps {
                withCredentials([[$class: 'UsernamePasswordMultiBinding',
                    credentialsId: 'aws_credentials',
                    usernameVariable: 'AWS_ACCESS_KEY_ID',
                    passwordVariable: 'AWS_SECRET_ACCESS_KEY']]) {

                    echo "üîß Configuring AWS & EKS..."

                    sh '''
                        export AWS_DEFAULT_REGION=$KUBE_REGION
                        aws eks update-kubeconfig --name $KUBE_CLUSTER
                        kubectl get nodes
                        helm version
                        helm list -A || true
                    '''

                    sh """
                        echo "üöÄ Deploying Helm release ${HELM_RELEASE} with image tag: ${params.IMAGE_TAG}"
                        helm upgrade --install ${HELM_RELEASE} ${HELM_CHART} \
                            --namespace ${NAMESPACE} \
                            -f conf_values.yaml \
                            --set spring.tag=${params.IMAGE_TAG} \
                            --wait
                    """

                    sh '''
                        echo "‚úÖ Verifying deployment..."
                        helm status petclinic
                        kubectl get all -n default -o wide
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "‚úÖ Pipeline completed successfully!"
        }
        failure {
            echo "‚ùå Pipeline failed. Check logs for details."
        }
    }
}
